"use strict";Component({properties:{openType:{type:String},size:{type:String,value:"default"},plain:{type:Boolean,value:!1},disabled:{type:Boolean,value:!1},loading:{type:Boolean,value:!1},hoverClass:{type:String,value:"button-hover"},hoverStopPropagation:{type:Boolean,value:!1},hoverStartTime:{type:Number,value:20},hoverStayTime:{type:Number,value:70},formType:{type:String},appParameter:{type:String},sessionFrom:{type:String},sendMessageTitle:{type:String},sendMessagePath:{type:String},sendMessageImg:{type:String},sendMessageCard:{type:Boolean,value:!1}},data:{rippleList:[],rippleId:0,rippleDeleteCount:0,rippleDeleteTimer:null,rippleColor:"#ffffff",openTypeToBindEvent:{getUserInfo:"getuserinfo",getphonenumber:"getphonenumber",launchApp:"error",contact:"contact"}},relations:{"../scForm/sc-form":{type:"parent"}},externalClasses:["sc-class"],methods:{_addRipple:function(e,t){var i=this;this.properties.disabled||this._queryMultipleNodes(".sc-class").then(function(s){var a=s[0],p=s[1],r=parseInt(a.width),n=parseInt(a.height),o=r>n?r:n,l=e.detail.x-(a.left+p.scrollLeft)-o/2,d=e.detail.y-(a.top+p.scrollTop)-o/2;i.data.rippleList.push({rippleId:"ripple-"+i.data.rippleId++,width:o,height:o,left:l,top:d,startAnimate:!0,holdAnimate:t||!1}),i.setData({rippleList:i.data.rippleList})})},_queryMultipleNodes:function(e){var t=this;return new Promise(function(i,s){var a=t.createSelectorQuery();a.select(e).boundingClientRect(),a.selectViewport().scrollOffset(),a.exec(function(e){i(e)})})},_scbuttonrippleAnimationend:function(){function e(){this.data.rippleList.splice(0,this.data.rippleDeleteCount),this.setData({rippleList:this.data.rippleList}),clearTimeout(this.data.timer),this.data.timer=null,this.data.rippleDeleteCount=0}this.data.rippleDeleteCount++,this.data.timer?(clearTimeout(this.data.timer),this.data.timer=setTimeout(e.bind(this),300)):this.data.timer=setTimeout(e.bind(this),300)},_longPress:function(e){this._addRipple(e,!0)},_touchend:function(e){var t=this.data.rippleList.slice(-1)[0];t&&t.holdAnimate&&(this.data.rippleList.pop(),this.setData({rippleList:this.data.rippleList})),this.triggerEvent("submit",e,{bubbles:!0,composed:!0})},_returnEventData:function(e){this.properties.disabled||this.triggerEvent(""+this.data.openTypeToBindEvent[this.properties.openType],e,{})},formSubmit:function(e){console.log(e)},submit:function(e){console.log(111111111111),this.triggerEvent("submit",e,{bubbles:!0,composed:!0})}}});